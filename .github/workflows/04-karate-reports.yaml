name: Run Karate Tests

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Target Environment (dev, pp, prod)'
        required: true
        default: 'pp'
        type: choice
        options:
          - dev
          - pp
          - prod
      module_name:
        description: 'Specify module name (e.g., users, products). Leave empty to run all modules.'
        required: false
        type: string
      script_name:
        description: 'Specify script name within the module (e.g., createUser.feature). Requires module_name. Leave empty to run all scripts in module.'
        required: false
        type: string
      clear_cache:
        description: 'Clear Karate cache before running tests?'
        required: false
        default: 'true'
        type: boolean

jobs:
  run_karate_tests:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Set up Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17' # Adjust to the Java version required by your Karate setup

    - name: Make Scripts Executable
      run: |
        # Ensure your main automation script is executable
        chmod +x pavillio-monorepo/cashe20/pavillio-karate-script/run-automation-tests.sh
        # Ensure the get-aws-tokens.sh script (if it's a separate file) is executable
        chmod +x pavillio-monorepo/cashe20/pavillio-karate-script/karate-test-files/get-aws-tokens.sh
      working-directory: ${{ github.workspace }} # Run chmod from the repo root

    - name: Run Karate Tests with Inputs
      # Pass GitHub Actions inputs as environment variables to the Bash script
      env:
        GH_ACTIONS_ENVIRONMENT: ${{ github.event.inputs.environment }}
        GH_ACTIONS_MODULE_NAME: ${{ github.event.inputs.module_name }}
        GH_ACTIONS_SCRIPT_NAME: ${{ github.event.inputs.script_name }}
        GH_ACTIONS_CLEAR_CACHE: ${{ github.event.inputs.clear_cache }}
        # Recommended: Define your Karate test reports output path here for consistency
        # This will create a 'karate-test-reports' directory at the root of your workspace
        KARATE_REPORTS_OUTPUT_DIR: ${{ github.workspace }}/karate-test-reports
      run: |
        # Execute your main automation script
        ./pavillio-monorepo/cashe20/pavillio-karate-script/run-automation-tests.sh
      shell: bash

    - name: Upload Karate Test Reports (Optional)
      uses: actions/upload-artifact@v4
      if: always() # Upload artifacts even if the previous step fails
      with:
        name: karate-test-reports-${{ github.event.inputs.environment }}
        path: ${{ github.workspace }}/karate-test-reports
        retention-days: 7 # How long to keep the artifact
